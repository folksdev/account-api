version: 2

jobs:
  build-and-test:
    docker:
      - image: circleci/openjdk:11

    environment:
      - JVM_OPTS: -Xmx3200m

    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "pom.xml" }}
            - dependencies-
      - run:
          name: Maven clean verify
          command: mvn clean verify
      - save_cache:
          key: dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

  package:
    docker:
      - image: circleci/openjdk:11

    environment:
     - JVM_OPTS: -Xmx3200m

    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "pom.xml" }}
            - dependencies-
      - run:
          name: Maven install
          command: mvn package -Dmaven.test.skip=true

  docker-build:
    docker:
      - image: circleci/openjdk:11

    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      - run:
          name: Docker build
          command: docker build -t folksdev/account-api:1.0.0 .

      - run:
          name: Docker Login
          command: docker login -u folksdev -p ${DOCKERHUB_PASSWORD}

      - run:
          name: Docker build
          command: docker push folksdev/account-api:1.0.0

      - save_cache:
          key: docker-image-cache-{{ checksum "Dockerfile" }}
          paths:
            - /var/lib/docker/

  docker-publish:
    docker:
      - image: circleci/openjdk:11

    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true

      - restore_cache:
          keys:
            - docker-image-cache-{{ checksum "Dockerfile" }}
            - docker-image-cache-

      - run:
          name: Docker build
          command: docker push folksdev/account-api:1.0.0


workflows:
  version: 2
  ci-cd-workflow:
    jobs:
      - build-and-test
      - package:
          requires:
          - build-and-test
      - docker-build:
          requires:
            - build-and-test
#      - docker-publish:
#          requires:
#            - docker-build

